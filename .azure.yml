trigger:
  branches:
    include:
      - master
  paths:
    include:
      - /
    exclude:
      - .editorconfig
      - .gitignore
      - LICENSE.txt
      - README.md
      - revision.jse
      - todo.txt
      - documentation/
      - nettools/
      - nsis/
      - simutrans/
      - themes_src/
      - translate_code/

pr:
  branches:
    include:
      - master
  paths:
    include:
      - /
    exclude:
      - .editorconfig
      - .gitignore
      - LICENSE.txt
      - README.md
      - revision.jse
      - todo.txt
      - documentation/
      - nettools/
      - nsis/
      - simutrans/
      - themes_src/
      - translate_code/

jobs:
  # Linux GCC
  ###############################################
  - job:
    pool:
      vmImage: 'ubuntu-latest'
    displayName: Linux SDL2 Build
    steps:
      - checkout: self
        fetchDepth: 1
      - script: |
          sudo apt-get update
          sudo apt-get -qq install zlib1g-dev libbz2-dev autoconf libsdl2-dev libsdl2-mixer-dev libfreetype6-dev libminiupnpc-dev
        displayName: Install Dependencies
      - script: |
          autoconf
          ./configure
          make
        displayName: Build

  - job:
    pool:
      vmImage: 'ubuntu-latest'
    displayName: Linux Server Build
    steps:
      - checkout: self
        fetchDepth: 1
      - script: |
          sudo apt-get update
          sudo apt-get -qq install zlib1g-dev libbz2-dev autoconf
        displayName: Install Dependencies
      - script: |
          autoconf
          ./configure --enable-server
          make
        displayName: Build

  - job:
    pool:
      vmImage: 'ubuntu-latest'
    displayName: Linux Makeobj Build
    steps:
      - checkout: self
        fetchDepth: 1
      - script: |
          sudo apt-get update
          sudo apt-get -qq install zlib1g-dev libbz2-dev autoconf libpng-dev pkg-config
        displayName: Install Dependencies
      - script: |
          autoconf
          ./configure
          cd makeobj
          make
        displayName: Build

  # Windows MinGW GCC
  ###############################################
  - job:
    pool:
      vmImage: 'windows-latest'
    displayName: Windows MinGW GDI Build
    steps:
      - checkout: self
        fetchDepth: 1
      - pwsh: |
          $msys2 = (Get-Location).Drive.Root + "msys64"
          git clone --depth 1 https://github.com/msys2/msys2-ci-base.git $msys2
          $env:PATH = "$msys2\usr\bin;$env:PATH"
          pacman -Syyu --noconfirm --noprogressbar
          pacman -Su --noconfirm --noprogressbar
        displayName: Install MSYS2
      - pwsh: |
          $msys2 = (Get-Location).Drive.Root + "msys64"
          $env:PATH = "$msys2\usr\bin;$env:PATH"
          pacman -Su --noconfirm --noprogressbar mingw-w64-i686-zlib mingw-w64-i686-bzip2 autoconf mingw-w64-i686-gcc make mingw-w64-i686-freetype mingw-w64-i686-miniupnpc
        displayName: Install Dependencies
      - bash: |
          msys2=$PWD | grep -o -E "^\/?\w+\/"
          PATH="$msys2/usr/bin;$msys2/mingw32/bin;$PATH"
          bash autoconf
          bash ./configure
          make
        displayName: Build

  - job:
    pool:
      vmImage: 'windows-latest'
    displayName: Windows MinGW SDL2 Build
    steps:
      - checkout: self
        fetchDepth: 1
      - pwsh: |
          $msys2 = (Get-Location).Drive.Root + "msys64"
          git clone --depth 1 https://github.com/msys2/msys2-ci-base.git $msys2
          $env:PATH = "$msys2\usr\bin;$env:PATH"
          pacman -Syyu --noconfirm --noprogressbar
        displayName: Install MSYS2
      - pwsh: |
          $msys2 = (Get-Location).Drive.Root + "msys64"
          $env:PATH = "$msys2\usr\bin;$env:PATH"
          pacman -Su --noconfirm --noprogressbar mingw-w64-i686-zlib mingw-w64-i686-bzip2 autoconf mingw-w64-i686-gcc make mingw-w64-i686-SDL2 mingw-w64-i686-SDL2_mixer mingw-w64-i686-freetype mingw-w64-i686-miniupnpc
        displayName: Install Dependencies
      - pwsh: |
          $msys2 = (Get-Location).Drive.Root + "msys64"
          $env:PATH = "$msys2\usr\bin;$msys2\mingw32\bin;$env:PATH"
          bash autoconf
          bash ./configure
          make
        displayName: Build

  - job:
    pool:
      vmImage: 'windows-latest'
    displayName: Windows MinGW Server Build
    steps:
      - checkout: self
        fetchDepth: 1
      - pwsh: |
          $msys2 = (Get-Location).Drive.Root + "msys64"
          git clone --depth 1 https://github.com/msys2/msys2-ci-base.git $msys2
          $env:PATH = "$msys2\usr\bin;$env:PATH"
          pacman -Syyu --noconfirm --noprogressbar
        displayName: Install MSYS2
      - pwsh: |
          $msys2 = (Get-Location).Drive.Root + "msys64"
          $env:PATH = "$msys2\usr\bin;$env:PATH"
          pacman -Su --noconfirm --noprogressbar mingw-w64-i686-zlib mingw-w64-i686-bzip2 autoconf mingw-w64-i686-gcc make
        displayName: Install Dependencies
      - pwsh: |
          $msys2 = (Get-Location).Drive.Root + "msys64"
          $env:PATH = "$msys2\usr\bin;$env:PATH"
          bash autoconf
          bash ./configure --enable-server
          make
        displayName: Build

  - job:
    pool:
      vmImage: 'windows-latest'
    displayName: Windows MinGW Makeobj Build
    steps:
      - checkout: self
        fetchDepth: 1
      - pwsh: |
          $msys2 = (Get-Location).Drive.Root + "msys64"
          git clone --depth 1 https://github.com/msys2/msys2-ci-base.git $msys2
          $env:PATH = "$msys2\usr\bin;$env:PATH"
          pacman -Syyu --noconfirm --noprogressbar
        displayName: Install MSYS2
      - pwsh: |
          $msys2 = (Get-Location).Drive.Root + "msys64"
          $env:PATH = "$msys2\usr\bin;$env:PATH"
          pacman -Su --noconfirm --noprogressbar mingw-w64-i686-zlib mingw-w64-i686-bzip2 autoconf mingw-w64-i686-gcc make mingw-w64-i686-libpng mingw-w64-i686-pkg-config
        displayName: Install Dependencies
      - pwsh: |
          $msys2 = (Get-Location).Drive.Root + "msys64"
          $env:PATH = "$msys2\usr\bin;$env:PATH"
          bash autoconf
          bash ./configure
          cd makeobj
          make
        displayName: Build

  # Windows Visual Studio
  ###############################################

  # MacOS Homebrew Clang
  ###############################################
  - job:
    pool:
      vmImage: 'macos-latest'
    displayName: MacOS SDL2 Build
    steps:
      - checkout: self
        fetchDepth: 1
      - script: |
          brew install autoconf sdl2 sdl2_mixer freetype miniupnpc
        displayName: Install Dependencies
      - script: |
          autoconf
          ./configure
          make
        displayName: Build

  - job:
    pool:
      vmImage: 'macos-latest'
    displayName: MacOS Server Build
    steps:
      - checkout: self
        fetchDepth: 1
      - script: |
          brew install autoconf
        displayName: Install Dependencies
      - script: |
          autoconf
          ./configure --enable-server
          make
        displayName: Build

  - job:
    pool:
      vmImage: 'macos-latest'
    displayName: MacOS Makeobj Build
    steps:
      - checkout: self
        fetchDepth: 1
      - script: |
          brew install autoconf libpng pkg-config
        displayName: Install Dependencies
      - script: |
          autoconf
          ./configure
          cd makeobj
          make
        displayName: Build
